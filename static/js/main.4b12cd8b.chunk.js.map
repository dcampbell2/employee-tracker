{"version":3,"sources":["utils/API/API.js","containers/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Home","state","data","handleInputChange","event","name","target","value","phoneFilter","filter","employee","phone","includes","setState","API","then","res","results","catch","err","console","log","className","type","id","onChange","this","scope","map","first","login","username","last","email","location","city","country","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iOAEe,EACH,WACR,OAAOA,IAAMC,IAAI,iDC6ENC,E,4MA7EbC,MAAQ,CACNC,KAAM,I,EAQRC,kBAAoB,SAACC,GAAW,IAAD,EACvBC,EAAOD,EAAME,OAAOC,MACpBA,EAAQH,EAAME,OAAOC,MACrBC,EAAc,EAAKP,MAAMC,KAAKO,QAAO,SAACC,GAC1C,OAAOA,EAASC,MAAMC,SAASL,MAGjC,EAAKM,UAAL,mBACGR,EAAOE,GADV,qBAEQC,GAFR,K,kEAZmB,IAAD,OAClBM,IACGC,MAAK,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEX,KAAMc,EAAId,KAAKe,aAC7CC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,+BAe9B,OACE,sBAAKG,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,gJAIA,oBAAIA,UAAU,SACd,gHAIA,uBACEC,KAAK,OACLD,UAAU,eACVE,GAAG,YACHC,SAAUC,KAAKvB,uBAGnB,wBAAOmB,UAAU,mBAAjB,UACE,gCACE,+BACE,oBAAIK,MAAM,QACV,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,6BACA,oBAAIA,MAAM,MAAV,0BAGJ,gCACGD,KAAKzB,MAAMC,KAAK0B,KAAI,SAACX,GACpB,OACE,+BACE,oBAAIU,MAAM,QACV,6BAAkCV,EAAQZ,KAAKwB,OAAtCZ,EAAQa,MAAMC,UACvB,6BAAKd,EAAQZ,KAAK2B,OAClB,6BAAKf,EAAQN,QACb,6BAAKM,EAAQgB,QACb,6BAAKhB,EAAQiB,SAASC,OACtB,6BAAKlB,EAAQiB,SAASjC,QACtB,6BAAKgB,EAAQiB,SAASE,4B,GAnErBC,aCOJC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OAEL,cAAC,EAAD,IAASC,SAASC,eAAe,SAMrCX,M","file":"static/js/main.4b12cd8b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  getUsers: function () {\n    return axios.get(\"https://randomuser.me/api/?results=50&nat=us\");\n  },\n};\n","import React, { Component } from \"react\";\nimport API from \"../../utils/API/API\";\n\nclass Home extends Component {\n  state = {\n    data: [],\n  };\n\n  componentDidMount() {\n    API.getUsers()\n      .then((res) => this.setState({ data: res.data.results }))\n      .catch((err) => console.log(err));\n  }\n  handleInputChange = (event) => {\n    const name = event.target.value;\n    const value = event.target.value;\n    const phoneFilter = this.state.data.filter((employee) => {\n      return employee.phone.includes(value);\n    });\n\n    this.setState({\n      [name]: value,\n      data: phoneFilter,\n    });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron\">\n          <h1 className=\"display-4\">Employee Directory</h1>\n          <p className=\"lead\">\n            Welcome to the employee directory! Here you'll see a result of all\n            available employees along with their non-sensitive information.\n          </p>\n          <hr className=\"my-4\" />\n          <p>\n            Use the below text area to filter for a specifc employee by their\n            phone number.\n          </p>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"searchBox\"\n            onChange={this.handleInputChange}\n          />\n        </div>\n        <table className=\"table table-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\"></th>\n              <th scope=\"col\">First Name</th>\n              <th scope=\"col\">Last Name</th>\n              <th scope=\"col\">Phone</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">City</th>\n              <th scope=\"col\">State/Territory</th>\n              <th scope=\"col\">Country</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.data.map((results) => {\n              return (\n                <tr>\n                  <th scope=\"row\"></th>\n                  <td key={results.login.username}>{results.name.first}</td>\n                  <td>{results.name.last}</td>\n                  <td>{results.phone}</td>\n                  <td>{results.email}</td>\n                  <td>{results.location.city}</td>\n                  <td>{results.location.state}</td>\n                  <td>{results.location.country}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import Home from \"./containers/Home/Home\"\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n\n    <App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}